 ..Enemy group children all get their update() called. Each child gets passed to the 'shootSights()' method. 
	..Perhaps should call each child's internal 	'shootSights()' instead.


 ..*rangeGroup children are only made if the enemy's sightGroup child has made contact with the player and the enemy '.isLocatedPlayer = true'. If the rangeGroup child is in contact with the player, 'isInMelee = true', else, 'isInMelee = false'

 ..*The shootSights() external method within createss 5 sight objects. For loop, 0: Front-Left sight, 1:Front Center, 2: Front-Right, 3:Left side, 4: Right side.


 ..*While debugging, I included a zombieCount variable to control how many zombies spawn on the screen. On each createEnemy() the variable incriments, and on each zombie.Kill(), it decrememnts.
	..With zombie count, I can limit the zombies 	on screen and track the attributes of the 	respawned/revived zombies to see why some 	range sights do not respond.
	..Fixed some of the problem, made sure the 	onRevived() had alot of the original new 	Zombie() attributes set to false as they 	should be.
	..*Had to do a rangeGroup.children search 	within the Zombie.kill(). In the search, 	checked to see which child had the same 	'sig'. Once that sig was matched, 	child.kill(). This way no more lingering 	rangesight after Zombie is dead.
	..May have to include a double check rangSight method to take an enemy, take its sig, and see if it matches any of the rangegroup's sigs.. if not, we will make another range sight for it.



 ..*playerTakeDamage() needs to be debugged.. It crashes. "Property 'nextDamage' of undefined"
	..playerTakeDamage() takes a whole enemy as 	an argument. Instead of actually passing the 	enemy object, I will create a plain 	javascript object and copy the properties 	needed to calculate the damage. This way if 	the enemy dies, the whole thing won't crash.

